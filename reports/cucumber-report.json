[
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "jsonplaceholder-api;get-a-list-of-posts",
        "keyword": "Scenario",
        "line": 4,
        "name": "Get a list of posts",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1290083
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 5,
            "name": "I send a GET request to \"https://jsonplaceholder.typicode.com/posts\"",
            "match": {
              "location": "steps/api.steps.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 515674998
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 6,
            "name": "the response status should be 200",
            "match": {
              "location": "steps/api.steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 1268414
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 7,
            "name": "the response should contain a \"userId\" in every item",
            "match": {
              "location": "steps/api.steps.ts:20"
            },
            "result": {
              "status": "passed",
              "duration": 2209039
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 8,
            "name": "the response should contain a \"title\" in every item",
            "match": {
              "location": "steps/api.steps.ts:20"
            },
            "result": {
              "status": "passed",
              "duration": 1084625
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "attach all userIds from the response array",
            "match": {
              "location": "steps/api.steps.ts:83"
            },
            "result": {
              "status": "passed",
              "duration": 1005415
            },
            "embeddings": [
              {
                "data": "QWxsIHVzZXJJZHM6ClsKICAxLAogIDEsCiAgMSwKICAxLAogIDEsCiAgMSwKICAxLAogIDEsCiAgMSwKICAxLAogIDIsCiAgMiwKICAyLAogIDIsCiAgMiwKICAyLAogIDIsCiAgMiwKICAyLAogIDIsCiAgMywKICAzLAogIDMsCiAgMywKICAzLAogIDMsCiAgMywKICAzLAogIDMsCiAgMywKICA0LAogIDQsCiAgNCwKICA0LAogIDQsCiAgNCwKICA0LAogIDQsCiAgNCwKICA0LAogIDUsCiAgNSwKICA1LAogIDUsCiAgNSwKICA1LAogIDUsCiAgNSwKICA1LAogIDUsCiAgNiwKICA2LAogIDYsCiAgNiwKICA2LAogIDYsCiAgNiwKICA2LAogIDYsCiAgNiwKICA3LAogIDcsCiAgNywKICA3LAogIDcsCiAgNywKICA3LAogIDcsCiAgNywKICA3LAogIDgsCiAgOCwKICA4LAogIDgsCiAgOCwKICA4LAogIDgsCiAgOCwKICA4LAogIDgsCiAgOSwKICA5LAogIDksCiAgOSwKICA5LAogIDksCiAgOSwKICA5LAogIDksCiAgOSwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMCwKICAxMApdCgpSZXBlYXRlZCB1c2VySWRzIHdpdGggY291bnRzOgp1c2VySWQgMTogMTAgdGltZXMKdXNlcklkIDI6IDEwIHRpbWVzCnVzZXJJZCAzOiAxMCB0aW1lcwp1c2VySWQgNDogMTAgdGltZXMKdXNlcklkIDU6IDEwIHRpbWVzCnVzZXJJZCA2OiAxMCB0aW1lcwp1c2VySWQgNzogMTAgdGltZXMKdXNlcklkIDg6IDEwIHRpbWVzCnVzZXJJZCA5OiAxMCB0aW1lcwp1c2VySWQgMTA6IDEwIHRpbWVz",
                "mime_type": "text/plain"
              },
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 295083
            }
          }
        ],
        "tags": [
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "jsonplaceholder-api;get-a-single-post",
        "keyword": "Scenario",
        "line": 11,
        "name": "Get a single post",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 57791
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 12,
            "name": "I send a GET request to \"https://jsonplaceholder.typicode.com/posts/1\"",
            "match": {
              "location": "steps/api.steps.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 150577915
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "the response status should be 200",
            "match": {
              "location": "steps/api.steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 787288
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "the response should contain \"id\" as 1",
            "match": {
              "location": "steps/api.steps.ts:28"
            },
            "result": {
              "status": "passed",
              "duration": 999165
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the response should contain \"userId\" as 1",
            "match": {
              "location": "steps/api.steps.ts:28"
            },
            "result": {
              "status": "passed",
              "duration": 740164
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 447916
            }
          }
        ],
        "tags": [
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "jsonplaceholder-api;get-a-non-existent-post",
        "keyword": "Scenario",
        "line": 17,
        "name": "Get a non-existent post",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 437500
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I send a GET request to \"https://jsonplaceholder.typicode.com/posts/9999\"",
            "match": {
              "location": "steps/api.steps.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 164985246
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "the response status should be 404",
            "match": {
              "location": "steps/api.steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 839456
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTAgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 554959
            }
          }
        ],
        "tags": [
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "jsonplaceholder-api;validate-number-of-posts",
        "keyword": "Scenario",
        "line": 21,
        "name": "Validate number of posts",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 145207
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I send a GET request to \"https://jsonplaceholder.typicode.com/posts\"",
            "match": {
              "location": "steps/api.steps.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 156562914
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "the response status should be 200",
            "match": {
              "location": "steps/api.steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 1072708
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "the response array length should be 100",
            "match": {
              "location": "steps/api.steps.ts:33"
            },
            "result": {
              "status": "passed",
              "duration": 1118249
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "text/plain"
              },
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 337291
            }
          }
        ],
        "tags": [
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "jsonplaceholder-api;validate-keys-and-values-in-post-at-index-10",
        "keyword": "Scenario",
        "line": 26,
        "name": "Validate keys and values in post at index 10",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 98875
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 27,
            "name": "I send a GET request to \"https://jsonplaceholder.typicode.com/posts\"",
            "match": {
              "location": "steps/api.steps.ts:5"
            },
            "result": {
              "status": "passed",
              "duration": 157285331
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 28,
            "name": "the response status should be 200",
            "match": {
              "location": "steps/api.steps.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 1183122
            },
            "embeddings": [
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "userId",
                      "2"
                    ]
                  },
                  {
                    "cells": [
                      "id",
                      "11"
                    ]
                  },
                  {
                    "cells": [
                      "title",
                      "et e vero quia laudantium"
                    ]
                  },
                  {
                    "cells": [
                      "body",
                      "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 29,
            "name": "the object at index 10 should have the following:",
            "match": {
              "location": "steps/api.steps.ts:53"
            },
            "result": {
              "status": "failed",
              "duration": 4830166,
              "error_message": "AssertionError\n    + expected - actual\n\n    -et ea vero quia laudantium autem\n    +et e vero quia laudantium\n\n    at CustomWorld.<anonymous> (/Users/harishkp/PlaywrightTS/my-playwright-project/steps/api.steps.ts:73:27)"
            },
            "embeddings": [
              {
                "data": "TWlzbWF0Y2ggZm9yIGtleSAidGl0bGUiOiBhY3R1YWw9ImV0IGVhIHZlcm8gcXVpYSBsYXVkYW50aXVtIGF1dGVtIiwgZXhwZWN0ZWQ9ImV0IGUgdmVybyBxdWlhIGxhdWRhbnRpdW0i",
                "mime_type": "text/plain"
              },
              {
                "data": "U3RlcCBFeGVjdXRlZCBhdDogWzU6NTM6MTEgUE1d",
                "mime_type": "text/plain"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 851458
            }
          }
        ],
        "tags": [
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "jsonplaceholder-api",
    "line": 2,
    "keyword": "Feature",
    "name": "JSONPlaceholder API",
    "tags": [
      {
        "name": "@api",
        "line": 1
      }
    ],
    "uri": "features/api.feature"
  }
]